name:             examples
version:          0.1
Build-Type:       Simple
cabal-version:    >= 1.2
author:           Jonathan Thaler
maintainer:       Jonathan Thaler (thaler.jonathan@gmail.com)
category:         Agent-Based Simulation, System-Dynamics, FRP
synopsis:         Accompanying examples showing the use of the library chimera

description:      Domain-specific language embedded in Haskell for programming hybrid agent-based simulation (mixed discrete-time and continuous-time) systems.
                  Chimera is based on Yampa/Dunai/BearRiver as it utilises concepts of Functional Reactive Programming (FRP) 

build-type:        Simple

-------------------------------------------------------------------------------
-- EXECUTABLES 
-------------------------------------------------------------------------------

executable SIREvent
  main-is:         Main.hs
  hs-source-dirs:
    .,
    ABS/SIRExamples/SIREvent/,
    ABS/SIRExamples/Utils/
  build-depends:   base, 
                    chimera, 
                    dunai,
                    bearriver,
                    parallel,
                    MonadRandom,
                    mtl

  ghc-options:      -O3 -Wall -Werror -fwarn-tabs -fno-warn-name-shadowing -fno-warn-missing-home-modules -threaded

executable FrSIR
  main-is:         Main.hs
  hs-source-dirs:
    .,
    ABS/SIRExamples/FrSIR/,
    ABS/SIRExamples/Utils/
  build-depends:   base, 
                    chimera, 
                    dunai,
                    bearriver,
                    parallel,
                    MonadRandom,
                    mtl

  ghc-options:      -O3 -Wall -Werror -fwarn-tabs -fno-warn-name-shadowing -fno-warn-missing-home-modules -threaded


executable SDSir
  main-is:         Main.hs
  hs-source-dirs:
    SD/SDSir/.,
    ABS/SIRExamples/Utils/.

  build-depends:  base, 
                  chimera, 
                  dunai,
                  bearriver,
                  parallel,
                  IfElse,
                  transformers

  ghc-options:      -O3 -Wall -Werror -fwarn-tabs -fno-warn-name-shadowing -fno-warn-missing-home-modules -threaded


-------------------------------------------------------------------------------
-- TEST-SUITES
-------------------------------------------------------------------------------
Test-Suite test_SugarScape
  default-language:
    Haskell2010
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    ., 
    ABS/SugarScape/Tests/
  main-is: Test.hs
  build-depends:
      base
    , tasty
    , tasty-hunit
    , tasty-smallcheck
    , tasty-quickcheck
    , chimera
    , QuickCheck
    , HUnit
  ghc-options:    -main-is Test 
  -- why the F*** is main-is not working???

Test-Suite test_FrSIR
  default-language:
    Haskell2010
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    .,
    ABS/SIRExamples/FrSIR/Tests/
  main-is: Test.hs
  build-depends:
      base
    , tasty
    , tasty-hunit
    , tasty-smallcheck
    , tasty-quickcheck
    , chimera
    , QuickCheck
    , HUnit
    , stm
  ghc-options:    -main-is Test 
  -- why the F*** is main-is not working???